<?xml version="1.0" encoding="UTF-8" ?>
<!--
       Copyright 2015-2019 the original author or authors.
       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at
          http://www.apache.org/licenses/LICENSE-2.0
       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.asecl.simdc.org.simdc_project.db.mapper.FirmwareMapper">

    <resultMap id="UserResultMap" type="User">
        <result property="ID" column="U_ID"/>
        <result property="EmployeeID" column="U_EmployeeID"/>
        <result property="RealName" column="U_RealName"/>
        <result property="NickName" column="U_NickName"/>
        <result property="EMail" column="U_EMail"/>
        <result property="Phone" column="U_Phone"/>
    </resultMap>

    <resultMap id="FWResultMap" type="Firmware">
        <result property="ID" column="ID"/>
        <result property="Name" column="Name"/>
        <result property="Version" column="Version"/>
        <result property="Path" column="Path"/>
        <result property="Remark" column="Remark"/>
        <result property="MD5" column="MD5"/>
        <result property="CreatedTime" column="CreatedTime"/>
        <association property="CreatedOwner" resultMap="UserResultMap"/>
    </resultMap>



    <resultMap id="FwVersionResultMap" type="FirmwareVersion">
        <result property="ID" column="ID"/>
        <result property="Version" column="Version"/>
        <result property="Path" column="Path"/>
        <result property="Remark" column="Remark"/>
        <result property="MD5" column="MD5"/>
        <result property="CreatedTime" column="CreatedTime"/>
        <association property="CreatedOwner" resultMap="UserResultMap"/>
    </resultMap>

    <resultMap id="FWInfoResultMap" type="FirmwareInfo">
        <result property="Name" column="Name"/>
        <collection property="Versions" resultMap="FwVersionResultMap"/>
    </resultMap>

<!--    <insert id="insert" useGeneratedKeys="true" keyProperty="ID" parameterType="com.asecl.simdc.org.simdc_project.db.entity.Firmware">-->
<!--        INSERT INTO firmware (Name,Version,Path,Remark,MD5,CreatedOwner_ID)-->
<!--        SELECT-->
<!--        #{Name, jdbcType=VARCHAR},-->
<!--        #{Version, jdbcType=VARCHAR},-->
<!--        #{Path, jdbcType=VARCHAR},-->
<!--        #{Remark, jdbcType=VARCHAR},-->
<!--        #{MD5, jdbcType=VARCHAR},-->
<!--        (SELECT ID FROM user WHERE EmployeeID=#{CreatedOwner.EmployeeID})-->
<!--        FROM DUAL WHERE NOT EXISTS (-->
<!--          SELECT 1 FROM firmware WHERE Name = #{Name, jdbcType=VARCHAR} and Version = #{Version, jdbcType=VARCHAR}-->
<!--        )-->
<!--    </insert>-->

    <insert id="insert" useGeneratedKeys="true" keyProperty="ID" parameterType="com.asecl.simdc.org.simdc_project.db.entity.Firmware">
        INSERT INTO firmware (Name,Version,CreatedOwner_ID)
        SELECT
        #{Name, jdbcType=VARCHAR},
        #{Version, jdbcType=VARCHAR},
        (SELECT ID FROM user WHERE EmployeeID=#{CreatedOwner.EmployeeID})
        FROM DUAL WHERE NOT EXISTS (
          SELECT 1 FROM firmware WHERE Name = #{Name, jdbcType=VARCHAR} and Version = #{Version, jdbcType=VARCHAR}
        )
    </insert>

    <select id="getAll" resultMap="FWResultMap">
        select
        fw.ID as ID,
        fw.Name as Name,
        fw.Version as Version,
        fw.Path as Path,
        fw.Remark as Remark,
        fw.MD5 as MD5,
        fw.CreatedTime as CreatedTime,
        u.ID as U_ID,
        u.EmployeeID as U_EmployeeID,
        u.RealName as U_RealName,
        u.NickName as U_NickName,
        u.EMail as U_EMail,
        u.Phone as U_Phone
        from firmware fw left join user u  ON u.ID=fw.CreatedOwner_ID
    </select>

    <select id="getAllInfo" resultMap="FWInfoResultMap">
        select
        fw.ID as ID,
        fw.Name as Name,
        fw.Version as Version,
        fw.Path as Path,
        fw.Remark as Remark,
        fw.MD5 as MD5,
        fw.CreatedTime as CreatedTime,
        u.ID as U_ID,
        u.EmployeeID as U_EmployeeID,
        u.RealName as U_RealName,
        u.NickName as U_NickName,
        u.EMail as U_EMail,
        u.Phone as U_Phone
        from firmware fw left join user u  ON u.ID=fw.CreatedOwner_ID
    </select>

    <select id="getTotalCount" resultType="int">
        select count(*) from firmware
    </select>

    <select id="getByNameAndVersion" resultMap="FWResultMap">
        select
        fw.ID as ID,
        fw.Name as Name,
        fw.Version as Version,
        fw.Path as Path,
        fw.Remark as Remark,
        fw.MD5 as MD5,
        fw.CreatedTime as CreatedTime,
        u.ID as U_ID,
        u.EmployeeID as U_EmployeeID,
        u.RealName as U_RealName,
        u.NickName as U_NickName,
        u.EMail as U_EMail,
        u.Phone as U_Phone
        from firmware fw left join user u  ON u.ID=fw.CreatedOwner_ID
        where fw.Name=(#{name}) and fw.Version=(#{version})
    </select>

    <select id="get" resultMap="FWInfoResultMap">
    select
        fw.ID as ID,
        fw.Name as Name,
        fw.Version as Version,
        fw.Path as Path,
        fw.Remark as Remark,
        fw.MD5 as MD5,
        fw.CreatedTime as CreatedTime,
        u.ID as U_ID,
        u.EmployeeID as U_EmployeeID,
        u.RealName as U_RealName,
        u.NickName as U_NickName,
        u.EMail as U_EMail,
        u.Phone as U_Phone
        from firmware fw inner join user u  ON u.ID=fw.CreatedOwner_ID
        <trim prefix="WHERE" prefixOverrides="And|OR">

            <if test="version != null and version.length()>0">
                AND fw.Version = (#{version})
            </if>

            <if test="name != null and name.length()>0">
                AND fw.Name = (#{name})
            </if>

            <if test="ownerEmplayeeId != null and ownerEmplayeeId.length()>0">
                AND u.EmployeeID = (#{ownerEmplayeeId})
            </if>

            <if test="startTime != null and endTime != null">
                AND fw.CreatedTime <![CDATA[ >= ]]> (#{startTime}) AND fw.CreatedTime <![CDATA[ <= ]]> (#{endTime})
            </if>

        </trim>
    </select>

    <update id="update">
        update firmware
        <trim prefix="set" suffixOverrides=",">
            <if test="Version != null">Version= #{Version},</if>
            <if test="Path != null">Path= #{Path},</if>
            <if test="Remark != null">Remark= #{Remark},</if>
            <if test="MD5 != null">MD5= #{MD5},</if>
        </trim>
        <where> Name= #{Name}</where>
    </update>

    <select id="getCountByNameAndVersoin" resultType="int">
        select count(*) from firmware where Name = (#{name}) AND Version = (#{version})
    </select>

    <delete id="deleteByID" >
        delete from firmware where ID=(#{id})
    </delete>

    <delete id="deleteByNameAndVersion" >
        delete from firmware where Name=(#{name}) and Version=(#{version})
    </delete>

    <select id="getCountByNameInTestconfiguration" resultType="int">
        select count(FW_ID) from testconfiguration_sw_fw_binding where FW_ID=(select ID from firmware where Name=(#{name}) and Version=(#{version}))
    </select>


</mapper>